<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library</name>
    </assembly>
    <members>
        <member name="T:PII_E13.ClassLibrary.AdaptadorDeTelegram">
            <summary>
            Contiene la información relevante de un mensaje de Telegram.
            Se aplica el patrón Adapter para crear esta clase y desacoplar la información de la API de Telegram.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.AdaptadorDeTelegram.#ctor(Telegram.Bot.Types.Message)">
            <summary>
             Constructor de la clase utilizando un <see cref="T:Telegram.Bot.Types.Message"/> de Telegram.
             <param name="mensaje">Mensaje de Telegram.</param>
             </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.AdaptadorDeTelegram.#ctor(Telegram.Bot.Types.CallbackQuery)">
            <summary>
             Constructor de la clase utilizando una <see cref="T:Telegram.Bot.Types.CallbackQuery"/> de Telegram.
             <param name="callbackQuery">CallbackQuery de Telegram.</param>
             </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.AdaptadorDeTelegram.Texto">
            <summary>
            Obtiene el texto del mensaje.
            </summary>
            <value>Texto de un mensaje de Telegram</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.AdaptadorDeTelegram.IdChat">
            <summary>
            Obtiene la Id en Telegram del chat donde se envió mensaje.
            </summary>
            <value>Id en Telegram de un chat</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.AdaptadorDeTelegram.IdUsuario">
            <summary>
            Obtiene la Id en Telegram del usuario que envió el mensaje.
            </summary>
            <value>Id en Telegram de un usuario</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.AdaptadorDeTelegram.IdMensaje">
            <summary>
            Obtiene la Id en Telegram del usuario que envió el mensaje.
            </summary>
            <value>Id en Telegram de un usuario</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.AdaptadorDeTelegram.Tipo">
            <summary>
            Indica si debe usarse procesado de lenguaje natural (PLN) para procesar este mensaje, si el recurso está disponible.
            </summary>
            <value>true si debe usarse PLN para procesar el mensaje, false en caso contrario.</value>
        </member>
        <member name="T:PII_E13.ClassLibrary.AdaptadorLocacion">
            <summary>
             Patrones y principios utilizados en esta clase:
            Expert conocer la informacion de las ubicaciones a las cuales se desea calcular distancias u obtner coordenadas.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.AdaptadorLocacion.ObtenerDistancia(PII_E13.ClassLibrary.IUbicacion,PII_E13.ClassLibrary.IUbicacion)">
            <summary>
            Sirve para obtener la distancia entre dos ubicaciones.
            </summary>
            <param name="primaria">ubicacion primaria</param>
            <param name="secundaria">ubicacion secundaria</param>
            <returns></returns>
        </member>
        <member name="T:PII_E13.ClassLibrary.Boton">
            <summary>
            Interfaz que representa un botón adjuntado a un mensaje.
            Se aplica el patrón adapter y se define una interfaz genérica de botón para disminuir el acoplamiento con las APIs de mensajería.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Boton.#ctor(System.String)">
            <summary>
            Constructor de la clase con callback igual al texto del botón.
            </summary>
            <param name="texto">Texto del botón.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.Boton.#ctor(System.String,System.String)">
            <summary>
            Constructor de la clase con callback y texto definidos explícitamente.
            </summary>
            <param name="texto">Texto del botón.</param>
            <param name="callback">Callback con respuesta recibida.</param>
        </member>
        <member name="P:PII_E13.ClassLibrary.Boton.Texto">
            <summary>
            Texto del botón.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Boton.Callback">
            <summary>
            Texto recibido por el sistema cuando este botón es seleccionado.
            </summary>
        </member>
        <member name="T:PII_E13.ClassLibrary.Buscador">
            <summary>
            Esta es una clase auxiliar que permite la búsqueda de ofertas. Se aplica SRP para tomar la decisión de separar esta responsabilidad de Sistema,
            ya que la forma en que se realiza esta búsqueda puede cambiar y Sistema puede tener otros motivos para ser modificada.
            Se aplica el patrón Singleton dentro de esta clase para permitir solo la creación y utilización de una instancia de Buscador.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Buscador.#ctor">
            <summary>
            Crea una instancia de Buscador.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Buscador.BuscarOfertas(PII_E13.ClassLibrary.Sistema,PII_E13.ClassLibrary.Emprendedor,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Realiza una búsqueda de ofertas dentro de una instancia de Sistema, utilizando la información de un Emprendedor dado,
            junto a una lista de etiquetas y categorías, para filtrar dentro de las ofertas.
            </summary>
            <param name="sistema">Instancia de Sistema.</param>
            <param name="emprendedor">Emprendedor cuyas propiedades se utilizan para filtrar.</param>
            <param name="etiquetas">Lista de etiquetas a utilizar para filtrar.</param>
            <param name="categorias">Lista de categorías a utilizar para filtrar.</param>
            <returns>Lista de ofertas ordenadas según la relevancia calculada para la búsqueda.</returns>
        </member>
        <member name="M:PII_E13.ClassLibrary.Buscador.OrdenarOfertasPorPuntaje(System.Collections.Generic.Dictionary{PII_E13.ClassLibrary.Oferta,System.Int32})">
            <summary>
            Ordena un diccionario de par <c>Oferta, int</c> de mayor a menor según el valor asignado a cada clave.
            </summary>
            <param name="ofertas">Dictionary de par <c>Oferta, int</c> a ordenar.</param>
            <returns><c>List de Ofertas</c> ordenadas de mayor a menor.</returns>
        </member>
        <member name="M:PII_E13.ClassLibrary.Buscador.DistanciaAPuntaje(System.Double,System.Int32,System.Int32)">
            <summary>
            Calcula el puntaje asignado a una oferta según una distancia dada, con la fórmula:
            <c>puntaje = 30 - Math.Ceiling(distancia / (distanciaMáxima / puntajeMáximo))</c>
            </summary>
            <param name="distancia">Distancia hacia la oferta.</param>
            <param name="distanciaMax">Distancia máxima para asignar un puntaje. Si la distancia supera (o es igual) a la distancia máxima, el puntaje será 0.</param>
            <param name="puntajeMax">Puntaje máximo asignable.</param>
            <returns><c>Puntaje en int</c> para la distancia según las condiciones definidas.</returns>
        </member>
        <member name="P:PII_E13.ClassLibrary.Buscador.Instancia">
            <summary>
            Instancia del buscador durante la ejecución. Se aplica el patrón Singleton.
            </summary>
            <value>Una única instancia de <c>Buscador</c></value>
        </member>
        <member name="T:PII_E13.ClassLibrary.Emprendedor">
            <summary>
            Esta clase respresenta los datos basicos y necesarios que todo Emprendedor tiene, además de sus responsabilidades asignadas.
            </summary>
            Patrones y principios:
               Cumple con SRP porque solo se identifica una razón de cambio: algún cambio en la lógica de las ofertas.
               Cumple con OSP porque está abierta a la extención y cerrada a la modificación.
               Cumple con Expert porque tiene toda la información necesaria para poder cumplir con la responsabilidad de dar de alta un emprendedor y consumir ofertas.
        </member>
        <member name="P:PII_E13.ClassLibrary.Emprendedor.Habilitaciones">
            <summary>
            Mediante una lista de <value>Habilitaciones</value> indicaremos todas las habiltiaciones con las que el emprendedor cuenta.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Emprendedor.OfertasPostuladas">
            <summary>
            Mediante una lista de identificadores únicos de instancias de <see cref="T:PII_E13.ClassLibrary.Oferta"/> indicaremos las ofertas a las cual se postuló.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Emprendedor.OfertasConsumidas">
            <summary>
            Mediante una lista de identificadores únicos de instancias de <see cref="T:PII_E13.ClassLibrary.Oferta"/> indicaremos las ofertas consumidas a las cual se postuló.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Emprendedor.#ctor">
            <summary>
            Crea una instancia vacía de <see cref="T:PII_E13.ClassLibrary.Emprendedor"/>
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Emprendedor.#ctor(System.String,System.String,System.Collections.Generic.List{PII_E13.ClassLibrary.Habilitacion},System.String,System.String,System.String)">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Emprendedor"/>
            </summary>
            <param name="id">Id del emprendedor en Telegram.</param>
            <param name="nombre">Nombre de la empresa del emprendedor.</param>
            <param name="habilitaciones">Habilitaciones poseídas por el emprendedor.</param>
            <param name="ciudad">La ciudad donde se basa el emprendedor.</param>
            <param name="direccion">La direccion de la base de operaciones del emprendedor en la ciudad.</param>
            <param name="rubro">El rubro dentro del cual trabaja el emprendedor.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.Emprendedor.#ctor(System.String,System.String,PII_E13.ClassLibrary.UbicacionBase,PII_E13.ClassLibrary.Rubro,System.Collections.Generic.List{PII_E13.ClassLibrary.Habilitacion},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Emprendedor"/> a través de deserialización.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Emprendedor.PostularseAOferta(System.Collections.Generic.List{PII_E13.ClassLibrary.Oferta})">
            <summary>
            Mediante una oferta, éste emprendedor se postulará a ella.
            </summary>
            <param name="ofertas">Lista de ofertas a postularse.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.Emprendedor.PostularseAOferta(PII_E13.ClassLibrary.Oferta)">
            <summary>
            Mediante una oferta, éste emprendedor se postulará a ella.
            </summary>
            <param name="oferta">Oferta a postularse.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.Emprendedor.VerOfertasPostuladas(System.DateTime,System.DateTime)">
            <summary>
            Mediante una una fecha de inicio y de fin se obtienen todas las ofertas postuladas en ese periodo de tiempo.
            </summary>
            <param name="inicio">Fecha de inicio del periodo en el que se quiere buscar.</param>
            <param name="fin">Fecha de fin del periodo en el que se quiere buscar.</param>
            <returns>Una lista de ofertas a las cuales se postuló el Emprendedor.</returns>
        </member>
        <member name="M:PII_E13.ClassLibrary.Emprendedor.VerOfertasConsumidas(System.DateTime,System.DateTime)">
            <summary>
            Mediante palabras calve, un buscador y un canal se obtienen las ofertas consumidas por el Emprendedor.
            </summary>
            <param name="inicio">Fecha de inicio del periodo en el que se quiere buscar.</param>
            <param name="fin">Fecha de fin del periodo en el que se quiere buscar.</param>
            <returns>Una lista de ofertas consumidas por el Emprendedor.</returns>
        </member>
        <member name="T:PII_E13.ClassLibrary.Empresa">
            <summary> 
            Patrones y principios utilizados en esta clase:
            ISP ya que segmenta las operaciones de la interface en la persistencia.
            Creator ya que crea una instancia de oferta en esta clase con los parametros necesarios para ello.
            Expert ya que se le da la responsabilidad de generar las publicaciones, debido a que es la clase más experta de la información.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Empresa.Ofertas">
            <summary>
            Id del usuario en el canal de registro.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Empresa.#ctor">
            <summary>
            Crea una instancia vacía de <see cref="T:PII_E13.ClassLibrary.Empresa"/>.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Empresa.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Crea una instancia de Empresa.
            </summary>
            <param name="id">Id del usuario en el canal de registro.</param>
            <param name="ciudad">Ciudad donde está basada la empresa.</param>
            <param name="direccion">Direccion de la empresa.</param>
            <param name="rubro">Rubro al que pertenece la empresa.</param>
            <param name="nombre">Nombre comercial de la empresa.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.Empresa.#ctor(System.String,PII_E13.ClassLibrary.UbicacionBase,PII_E13.ClassLibrary.Rubro,System.String,System.Collections.Generic.List{PII_E13.ClassLibrary.Oferta})">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Empresa"/> a través de deserialización.
            </summary>
            <param name="id">Id del usuario en el canal de registro.</param>
            <param name="ubicacion">Instancia de <see cref="T:PII_E13.ClassLibrary.UbicacionBase"/> correspondiente a la ubicacion del usuario.</param>
            <param name="rubro">Instancia de <see cref="T:PII_E13.ClassLibrary.Rubro"/> correspondiente al rubro del usuario.</param>
            <param name="nombre">Nombre comercial de la empresa.</param>
            <param name="ofertas">Lista de instancias de <see cref="T:PII_E13.ClassLibrary.Oferta"/> correspondiente a las ofertas creadas por la empresa.</param>
            <returns></returns>
        </member>
        <member name="M:PII_E13.ClassLibrary.Empresa.PublicarOferta(System.String,System.String,System.String,System.DateTime,System.Boolean,System.Collections.Generic.List{System.String},System.Collections.Generic.List{PII_E13.ClassLibrary.Habilitacion})">
            <summary>
            Crea una nueva Oferta y la añade a la lista de ofertas de la empresa.
            </summary>
            <param name="id">El id único de la oferta generada.</param>
            <param name="fechaCierre">La fecha de cierre de la oferta.</param>
            <param name="etiquetas">Las etiquetas o palabras clave de la oferta.</param>
            <param name="habilitaciones">Las habilitaciones requeridas para tomar la oferta.</param>
            <param name="descripcion">La descripción de la oferta.</param>
            <param name="titulo">El titulo de la oferta.</param>
            <param name="disponibleConstantemente">Indica si la oferta está disponible constantemente o puntualmente.</param>
            <exception cref="T:System.ArgumentException">Si el id de la <see cref="T:PII_E13.ClassLibrary.Oferta"/> ya existe.</exception>
        </member>
        <member name="M:PII_E13.ClassLibrary.Empresa.ActualizarOferta(PII_E13.ClassLibrary.Oferta)">
            <summary>
            </summary>
            <param name="oferta">la oferta que se desea modificar.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.Empresa.VerOfertasPropias(System.DateTime,System.DateTime)">
            <summary>
            Muestra las ofertas publicadas por la empresa en una lista filtrada por fecha.
            </summary>
            <param name="inicio">Fecha de inicio del periodo en el que se quiere buscar.</param>
            <param name="fin">Fecha de fin del periodo en el que se quiere buscar.</param>
            <returns></returns>
        </member>
        <member name="M:PII_E13.ClassLibrary.Empresa.ObtenerOfertaPorId(System.String)">
            <summary>
            Recupera una oferta de la lista de ofertas utilizando su id y una id dada.
            </summary>
            <param name="id">Id de la oferta a recuperar.</param>
            <returns>La instancia de Oferta correspondiente a la id dada.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Si no encuentra una <see cref="T:PII_E13.ClassLibrary.Oferta"/></exception>
        </member>
        <member name="T:PII_E13.ClassLibrary.EncriptadorSHA256">
            <summary>
            Clase encargada de generar un hash identificador para los objetos del sistema.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.EncriptadorSHA256.ObtenerCodigo(System.String)">
            <summary>
            Genera un hash utilizando SHA256 con una entrada
            </summary>
            <param name="entrada">Semilla para la generación del hash.</param>
            <returns>Una cadena de caracteres correspondiente a un hash obtenido de codificar la entrada con SHA256.</returns>
        </member>
        <member name="M:PII_E13.ClassLibrary.EncriptadorSHA256.ObtenerHash(System.Security.Cryptography.HashAlgorithm,System.String)">
            <summary>
            Metodo privado que se encarga de crear el hash en base un input determinado.
            Extraído de la documentación de .NET:
            https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.hashalgorithm.computehash?view=net-5.0
            </summary>
            <param name="algoritmoDeHash">Algoritmo de hash a utilizar.</param>
            <param name="entrada">Semilla para la generación del hash.</param>
            <returns></returns>
        </member>
        <member name="T:PII_E13.ClassLibrary.GestorSesiones">
            <summary>
            Clase encargada de administrar todas las sesiones del sistema por lo que cumple con SRP y Expert.
            Cumple con Singleton para asegurarnos de no duplicar los datos en varias instancias
            y que esta clase actua a forma de servicio de ser el referente de almacenar las sesiones y gestionarlas.
            Cumple con creator para agregar más sesiones al listado general de sesiones.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.GestorSesiones.ObtenerSesion(System.String,System.Boolean@)">
            <summary>
            Obtiene una sesión para el identificador único de usuario enviado por parámetros.
            Si el usuario ya tenía una sesión activa, se retorna dicha sesión; de lo contrario, se crea y retorna una nueva.
            </summary>
            <param name="idUsuario">Identificador único del usuario.</param>
            <param name="nuevaSesion">Booleano que indica si la sesión es nueva.</param>
        </member>
        <member name="P:PII_E13.ClassLibrary.GestorSesiones.Sesiones">
            <summary>
            Diccionario de sesiones existentes actualmente.
            </summary>
            <value>Un diccionario de string, <see cref="T:PII_E13.ClassLibrary.Sesion"/> conteniendo todas las sesiones existentes.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.GestorSesiones.Instancia">
            <summary>
            Instancia del gestor de sesiones durante la ejecución. Se aplica el patrón Singleton.
            </summary>
        </member>
        <member name="T:PII_E13.ClassLibrary.Habilitacion">
            <summary>
            Esta clase respresenta los datos basicos y necesarios de una Habilitación.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Habilitacion.Nombre">
            <summary>
            Nombre de la habilitación.
            </summary>
            <value>Cadena de caracteres con el nombre de una habilitación.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Habilitacion.Descripcion">
            <summary>
            Descripción de la habilitación.
            </summary>
            <value>Cadena de caracteres con la descripción de una habilitación.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Habilitacion.NombreInsitucionHabilitada">
            <summary>
            Nombre de la institución que expedió la habilitación.
            </summary>
            <value>Cadena de caracteres con el nombre de la institución que expedió una habilitación.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Habilitacion.FechaTramite">
            <summary>
            Fecha del trámite de la habilitación.
            </summary>
            <value><see cref="T:System.DateTime"/> con la fecha del trámite de una habilitación.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Habilitacion.FechaVencimiento">
            <summary>
            Fecha de vencimiento de la habilitación.
            </summary>
            <value><see cref="T:System.DateTime"/> con la fecha de vencimiento de una habilitación.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Habilitacion.Vigente">
            <summary>
            Indica si la habilitación sigue vigente.
            </summary>
            <value>Booleano con valor <c>true</c> si la habilitación sigue vigente y <c>false</c> en caso contrario.</value>
        </member>
        <member name="M:PII_E13.ClassLibrary.Habilitacion.#ctor(System.String,System.String,System.String,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Crea una instancia de Habilitacion.
            </summary>
            <param name="nombre">Nombre de la Habilitacion</param>
            <param name="descripcion">Descripcion de la Habilitacion.</param>
            <param name="nombreInsitucionHabilitada">Nombre de la institución que habilitó la Habilitacion.</param>
            <param name="fechaTramite">Fecha de Tramite de la Habilitacion.</param>
            <param name="fechaVencimiento">Fecha de Vencimiento de la Habilitacion.</param>
            <param name="vigente">Indica si la Habilitacion está vigente.</param>
        </member>
        <member name="T:PII_E13.ClassLibrary.IAdaptadorLocacion">
            <summary>
            Interfaz utilizada para desacoplar la implementación 
            de la clase AdaptadorLocacion utilizando el patron, adapter.
            logrando que la clase en la ubicacion no tenga que conocer la implementacion 
            de la clase AdaptadorLocacion quien se comunica con la libreria brindada por los profesores.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.IAdaptadorLocacion.ObtenerDistancia(PII_E13.ClassLibrary.IUbicacion,PII_E13.ClassLibrary.IUbicacion)">
            <summary>
            
            </summary>
            <param name="primaria"></param>
            <param name="secundaria"></param>
            <returns></returns>
        </member>
        <member name="T:PII_E13.ClassLibrary.IBoton">
            <summary>
            Interfaz que representa un botón adjuntado a un mensaje.
            Se aplica el patrón adapter y se define una interfaz genérica de botón para disminuir el acoplamiento con las APIs de mensajería.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IBoton.Texto">
            <summary>
            Texto del botón.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IBoton.Callback">
            <summary>
            Texto recibido por el sistema cuando este botón es seleccionado.
            </summary>
        </member>
        <member name="T:PII_E13.ClassLibrary.IEncriptador">
            <summary>
            Interfaz encargada de generar un código de encriptación recibiendo una entrada.
            Se aplica DIP para asignarle esta responsabilidad a una abstracción, en forma de interfaz.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.IEncriptador.ObtenerCodigo(System.String)">
            <summary>
            Genera un hash utilizando un algoritmo de encriptación.
            </summary>
            <param name="entrada">Semilla para la generación del hash.</param>
            <returns>Una cadena de caracteres correspondiente a un hash obtenido al codificar la entrada.</returns>
        </member>
        <member name="T:PII_E13.ClassLibrary.IEnviador">
            <summary>
            Interfaz que representa un tipo capaz de enviar un mensaje a una plataforma de mensajería.
            Se aplica DIP para asignar la responsabilidad de enviar mensajes a una abstraccion de tipo IEnviador y realizar la implementación
            correspondiente a cada plataforma en subtipos de éste.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.IEnviador.EnviarMensaje(PII_E13.ClassLibrary.IRespuesta)">
            <summary>
            Envia un mensaje a la plataforma específica de este enviador.
            </summary>
            <param name="respuesta">Respuesta a enviar a la plataforma específica.</param>
        </member>
        <member name="T:PII_E13.ClassLibrary.IMensaje">
            <summary>
            Representa un mensaje enviado por un usuario a través de una plataforma de mensajería.
            Se aplica el patrón Adapter para desacoplar la información recibida a través de las APIs y almacenarla en instancias de clases que implementen a esta interfaz.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IMensaje.IdChat">
            <summary>
            Id del chat en el que fue enviado el mensaje.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IMensaje.IdUsuario">
            <summary>
            Id del usuario remitente.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IMensaje.Texto">
            <summary>
            Contenido en texto del mensaje.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IMensaje.IdMensaje">
            <summary>
            Id del mensaje al cual el callback fue enviado como respuesta.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IMensaje.Tipo">
            <summary>
            Tipo del mensaje.
            </summary>
        </member>
        <member name="T:PII_E13.ClassLibrary.IMensaje.Tipos">
            <summary>
            Tipos de mensajes.
            </summary>
            <type name="Mensaje"></type>
        </member>
        <member name="F:PII_E13.ClassLibrary.IMensaje.Tipos.Mensaje">
            <summary>Mensaje de texto.</summary>
        </member>
        <member name="F:PII_E13.ClassLibrary.IMensaje.Tipos.Callback">
            <summary>Callback enviado a través de un botón.</summary>
        </member>
        <member name="T:PII_E13.ClassLibrary.Intencion">
            <summary>
            Representa una intención obtenida a través de procesamiento de lenguaje natural (PLN) a partir de un texto.
            Es una clase contenedora de información.
            Se aplica el patrón Adapter para desacoplar las APIs de Google para PLN a través de esta clase y su clase constructora.
            <see cref="T:PII_E13.ClassLibrary.LenguajeNatural"/>, que representa a un procesador de lenguaje natural.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Intencion.#ctor(System.String,System.Single,System.String)">
            <summary>
            Crea una instancia de una <see cref="T:PII_E13.ClassLibrary.Intencion"/> obtenida a partir de analizar un texto con PLN.
            </summary>
            <param name="nombre">El Display Name de la <see cref="T:PII_E13.ClassLibrary.Intencion"/> en Dialogflow.</param>
            <param name="confianzaDeteccion">El porcentaje, de 0 al 100, de confianza en la detección de la <see cref="T:PII_E13.ClassLibrary.Intencion"/>.</param>
            <param name="entrada">La entrada de texto que se analizó para encontrar esta <see cref="T:PII_E13.ClassLibrary.Intencion"/>.</param>
        </member>
        <member name="P:PII_E13.ClassLibrary.Intencion.Entrada">
            <summary>
            La entrada de texto que se analizó para encontrar esta <see cref="T:PII_E13.ClassLibrary.Intencion"/>.
            </summary>
            <value>Una cadena de caracteres conteniendo la entrada de texto analizada para encontrar esta <see cref="T:PII_E13.ClassLibrary.Intencion"/>.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Intencion.Nombre">
            <summary>
            El Display Name de la <see cref="T:PII_E13.ClassLibrary.Intencion"/> en Dialogflow.
            </summary>
            <value>Una cadena de caracteres conteniendo el nombre de la <see cref="T:PII_E13.ClassLibrary.Intencion"/>.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Intencion.ConfianzaDeteccion">
            <summary>
            El porcentaje, de 0 al 100, de confianza en la detección de la <see cref="T:PII_E13.ClassLibrary.Intencion"/>.
            </summary>
            <value>Un valor float del 0 al 100 representando el porcentaje de confianza en la identificación de la <see cref="T:PII_E13.ClassLibrary.Intencion"/>.</value>
        </member>
        <member name="T:PII_E13.ClassLibrary.IPersistor">
            <summary>
            Interface que representa las operaciones de un persistor de información a través de diferentes medios de persistencia.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.IPersistor.Escribir``1(System.String,``0)">
            <summary>
            Guarda el contenido de la cadena de caracteres de información en el destino indicado.
            </summary>
            <param name="destino">El destino donde se guardará la información.</param>
            <param name="objeto">El objeto a guardar.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.IPersistor.Leer``1(System.String)">
            <summary>
            Lee la información contenida en la fuente de información enviada por parámetros.
            </summary>
            <param name="fuente">La dirección, referencia o ruta hacia la fuente de información.</param>
            <returns>Retorna la información encontrada como una instancia de la clase enviada por parámetros de tipo.</returns>
        </member>
        <member name="T:PII_E13.ClassLibrary.IRespuesta">
            <summary>
            Interfaz que representa una respuesta a un mensaje.
            DOCUMENTAR PATRONES APLICADOS
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IRespuesta.Texto">
            <summary>
            Texto del mensaje de la respuesta.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IRespuesta.MensajePrevio">
            <summary>
            Mensaje que provocó esta respuesta.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IRespuesta.EditarMensaje">
            <summary>
            Indica si el último mensaje debe ser editado, de ser posible.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IRespuesta.Botones">
            <summary>
            Matriz de botones enviados junto al mensaje
            </summary>
        </member>
        <member name="T:PII_E13.ClassLibrary.IUbicacion">
            <summary>
            Representa a la información y operaciones básicas de una ubicación.
            Se aplica DIP al aplicar dependencias en una abstracción de una ubicación, en lugar de una clase específica.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IUbicacion.Ciudad">
            <summary>
            Nombre de la ciudad de la ubicación
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.IUbicacion.Direccion">
            <summary>
            Dirección correspondiente a la ubicación
            </summary>
            <value></value>
        </member>
        <member name="M:PII_E13.ClassLibrary.IUbicacion.Redactar">
            <summary>
            Genera una cadena de texto con la información de la ubicación
            </summary>
            <returns>Retorna un string con la ubicación formateada</returns>
        </member>
        <member name="M:PII_E13.ClassLibrary.IUbicacion.ObtenerDistancia(PII_E13.ClassLibrary.IUbicacion)">
            <summary>
            Calcula la distancia entre dos instancias de implementaciones de <see cref="T:PII_E13.ClassLibrary.IUbicacion"/>
            Delega la responsabilidad de calcular la distancia al gestor.
            </summary>
            <param name="otraUbicacion">Otra ubicación, cuya distancia hacia esta instancia se quiere obtener.</param>
            <returns>Un double conteniendo la distancia entre las ubicaciones</returns>
        </member>
        <member name="T:PII_E13.ClassLibrary.LenguajeNatural">
            <summary>
            Representa un procesador de lenguaje natural que utiliza el servicio de Google Cloud "Dialogflow" para reconocer intenciones en texto.
            Se aplica el patrón Adapter para utilizar los servicios de las APIs de Google para procesado de lenguaje natural a través de esta clase,
            además aplicando Constructor al generar instancias de la clase <see cref="T:PII_E13.ClassLibrary.Intencion"/>, la cual representa a una intención hallada.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.LenguajeNatural.#ctor(System.String)">
            <summary>
            Crea una instancia de un procesador de lenguaje natural para una sesión.
            </summary>
            <param name="idSesion">Id única de la <see cref="T:PII_E13.ClassLibrary.Sesion"/> dentro de la cual se está utilizando este procesador de lenguaje natural</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.LenguajeNatural.ObtenerIntencion(System.String)">
            <summary>
            Genera una intención utilizando procesamiento de lenguaje natural (PLN) a partir de una cadena de texto.
            </summary>
            <param name="texto">La cadena de texto cuya intención se quiere encontrar con PLN.</param>
            <returns>Una instancia de <see cref="T:PII_E13.ClassLibrary.Intencion"/> con la información de la intención identificada.</returns>
        </member>
        <member name="P:PII_E13.ClassLibrary.LenguajeNatural.UltimaIntencion">
            <summary>
            Representa la última intención encontrada utilizando esta instancia de un procesador de lenguaje natural.
            </summary>
            <value>Una instancia de <see cref="T:PII_E13.ClassLibrary.Intencion"/> con la información de la última intención identificada.</value>
        </member>
        <member name="T:PII_E13.ClassLibrary.Material">
            <summary>
            La clase material se encarga de conocer lo relativo al material que consituye el producto
            Principios y patrones aplicados:
            Principio ISP: no hay objetos forzados a depender de otros objetos que no usan. 
            Principio SRP: tiene responsabilidad sobre una única parte de la funcionalidad, quedando completamente encapsulada dentro de la clase.
            Procurando que la clase tenga solo una razón para cambiar. 
            Patrón OCP: la clase es abierta a la extensión mediante herencia y/o composición, pero cerrada a cambios ya que no es posible y no es necesario realizar cambios en su código.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Material.#ctor">
            <summary>
            Crea una instancia vacía de <see cref="T:PII_E13.ClassLibrary.Material"/>.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Material.#ctor(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Crea una instancia de un <see cref="T:PII_E13.ClassLibrary.Material"/>.
            </summary>
            <param name="nombre">Nombre del material.</param>
            <param name="unidadEstandar">Unidad estándar con la que se mide el material.</param>
            <param name="categorias">Categorias dentro de las que esta el material. (Opcional)</param>
        </member>
        <member name="P:PII_E13.ClassLibrary.Material.Nombre">
            <summary>
            Nombre del material.
            </summary>
            <value>Cadena de caracteres conteniendo el nombre del material.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Material.Categorias">
            <summary>
            Categorías en las que esta incluido el material.
            </summary>
            <value>Lista de cadena de caracteres conteniendo las categorías a las que pertenece el material.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Material.UnidadEstandar">
            <summary>
            Unidad en la que se mide el material según el Sistema Internacional de Unidades.
            </summary>
            <value>Cadena de caracteres conteniendo la unidad estándar del material en el Sistema Internacional de Unidades.</value>
        </member>
        <member name="T:PII_E13.ClassLibrary.Oferta">
            <summary>
            La clase Oferta se encarga de conocer todo lo relativo a la Oferta.
             Patrones y principios aplicados:
             Principio EXPERT: ya que se le asignaron sus responsabilidades en su calidad
             de experto en la información, por ser la clase que tiene la información necesaria
             para poder cumplir con la tarea, mientras que se mantiene la encapsulación 
             ya que utiliza su propia información para cumplir con las responsabilidades.
             Patrón Low Coupling: ya que al asignársele responsabilidades a 
             la clase se buscó que el acoplamiento se mantuviera bajo al no depender de muchas 
             otras clases.
             Patrón High Cohesión: ya que las responsabilidades de la clase están
             fuertemente relacionadas, creando así una clase robusta y fácil de entender. 
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Oferta.#ctor(System.String,System.String,System.DateTime,System.DateTime,PII_E13.ClassLibrary.Oferta.Estados,System.String,System.String,System.Boolean,System.Collections.Generic.List{PII_E13.ClassLibrary.Habilitacion},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{PII_E13.ClassLibrary.Producto})">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Oferta"/> a partir de la deserialización de un objeto en formato JSON.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Oferta.#ctor(System.String,PII_E13.ClassLibrary.Empresa,System.DateTime,System.Collections.Generic.List{System.String},System.Collections.Generic.List{PII_E13.ClassLibrary.Habilitacion},System.String,System.String,System.Boolean)">
            <summary>
            Crea una instancia de la clase <see cref="T:PII_E13.ClassLibrary.Oferta"/>.
            </summary>
            <param name="id"> Un número identificador para referenciar la oferta a lo largo del sistema </param>
            <param name="empresa"> Empresa que publica la oferta </param>
            <param name="fechaCierre"> Fecha de cierre, límite para postularse a la oferta.</param>
            <param name="etiquetas">Etiquetas relacionadas a la oferta que sirven para agruparlas o clasificarlas</param>
            <param name="habilitaciones">Habilitaciones requeridas por la empresa para postularse a atender la oferta</param>
            <param name="descripcion">Descripcion realizada por la empresa</param>
            <param name="titulo">Titulo bajo el cual se publica la oferta</param>
            <param name="recurrente">Para definir si una oferta es recurrente.</param>
        </member>
        <member name="T:PII_E13.ClassLibrary.Oferta.Estados">
            <summary>
            Lista de estados posibles en que se puede encontrar una Oferta.
            </summary>
        </member>
        <member name="F:PII_E13.ClassLibrary.Oferta.Estados.Habilitada">
            <summary>
            Se le asigna a una oferta para indicar que esta vigente.
            </summary>
            <value>Habilitada indica que esta vigente</value>
        </member>
        <member name="F:PII_E13.ClassLibrary.Oferta.Estados.Cerrada">
            <summary>
            Se le asigna a una oferta para indicar que ya está cerrada y no es posible posularse.
            </summary>
            <value>Cerrada indica que no esta activa una oferta por haber sido adjudicada o por haber llegado a su fecha límite.</value>
        </member>
        <member name="F:PII_E13.ClassLibrary.Oferta.Estados.Suspendida">
            <summary>
            Se le asigna a una oferta para indicar que por algún motivo no esta disponible la oferta.
            </summary>
        </member>
        <member name="F:PII_E13.ClassLibrary.Oferta.Estados.Entregada">
            <summary>
            Se le asigna a una oferta para indicar que fue entregada a un Emprendedor.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.Id">
            <summary>
            Es una string que identifica a la oferta y que permite referenciarla a lo largo del sitema.
            </summary>
            <value>Id es el identificador único de la oferta.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.Empresa">
            <summary>
            El identificador único de la empresa que publicó la oferta.
            </summary>
            <value>Cadena de caracteres conteniendo el identificador único de la empresa que publicó la oferta.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.FechaCreada">
            <summary>
            Fecha en que se publica la oferta.
            </summary>
            <value>Fecha en que se publica la oferta.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.FechaCierre">
            <summary>
            Fecha límite para postularse a la oferta.
            </summary>
            <value>FechaCierre es la fecha límite para postularse a la oferta.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.Etiquetas">
            <summary>
            Son etiquetas que permiten categorizar la oferta para mostrarla agrupadas junto a otras que compartan la misma etiqueta.
            </summary>
            <value>Etiquetas permite categorizar la oferta.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.Estado">
            <summary>
            Estado indica cuál es la situación actual de una Oferta.
            </summary>
            <value>Estado indica si una oferta esta habilitada, cerrada o suspendida.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.Habilitaciones">
            <summary>
            Indica cuáles son las habilitaciones que exige la empresa para postularse a la oferta.
            </summary>
            <value>Habilitaciones exigidas por al empresa.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.ValorUSD">
            <summary>
            Valor en dólares USA que la empresa ofresa en pago por la realización de la tarea que implica la oferta.
            </summary>
            <value> ValorUSD es el valor en dólares USA definido por la empresa que publica la oferta.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.ValorUYU">
            <summary>
            ValorUY es el valor en pesos uruguayos definido por la empresa que publica la oferta.
            </summary>
            <value>ValorUY es el valor en pesos uruguayos definido por la empresa que publica la oferta.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.Descripcion">
            <summary>
            Es la descripción que hace la empresa para describir la oferta al publicarla.
            </summary>
            <value>Descripcion que hace la empresa</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.Titulo">
            <summary>
            Titulo bajo el que se publica la oferta.
            </summary>
            <value>Titulo bajo el que se publica la oferta.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.Productos">
            <summary>
            Productos es la lista de productos que componen la oferta.
            </summary>
            <value>Productos es la lista de productos que componen la oferta.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.Recurrente">
            <summary>
            Una propiedad que indica si la oferta es recurrente.
            </summary>
            <value>Una propiedad que indica si la oferta es recurrente.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Oferta.EmprendedoresPostulados">
            <summary>
            Lista de los emprendedores que se han postulado para la oferta.
            </summary>
            <value>Lista conteniendo cadenas de caracteres referenciando los idenitificadores únicos de los emprendedores que se han postulado a la oferta.</value>
        </member>
        <member name="M:PII_E13.ClassLibrary.Oferta.AgregarProducto(PII_E13.ClassLibrary.Material,System.String,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Agrega un producto a la lista de productos.
            </summary>
            <param name="material">Material que conforma al producto.</param>
            <param name="ciudad">Ciudad en la que se encuentra la oferta.</param> 
            <param name="direccion">Dirección dentro de la Ciudad en la que se encuentra la oferta.</param>      
            <param name="cantidadEnUnidades">Cantidad de unidades</param>
            <param name="valorUYU">Valor en pesos uruguayos.</param>
            <param name="valorUSD">Valor en dolares usa.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.Oferta.AgregarHabilitacion(System.String,System.String,System.String)">
            <summary>
            Agrega una Habilitacion a la lista.
            </summary>
            <param name="nombre">Nombre de la habilitacion.</param>
            <param name="descripcion">Descripcion de la habilitaicon.</param> 
            <param name="nombreInsitucionHabilitada">Nombre de la institucion.</param>      
        </member>
        <member name="M:PII_E13.ClassLibrary.Oferta.RemoverProducto(PII_E13.ClassLibrary.Producto)">
            <summary>
            Quita un producto de la lista.
            </summary>
            <param name="producto">Detalle del producto a quitar de la lista.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.Oferta.Redactar">
            <summary>
            Métodos para publicar los mensajes relativos a las ofertas.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Oferta.RedactarResumen">
            <summary>
            Métodos para publicar los mensajes relativos a las ofertas en versión resumida.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Oferta.RedactarPostulados">
            <summary>
            Un método para listar todos los emprendedores postulados a una oferta.
            </summary>
        </member>
        <member name="T:PII_E13.ClassLibrary.PersistorDeJson">
            <summary>
            Clase encargada de persistir información en archivos.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.PersistorDeJson.Escribir``1(System.String,``0)">
            <summary>
            Guarda el contenido de un objeto en formato JSON en la ruta de destino.
            </summary>
            <param name="ruta">La ruta donde se guardará el archivo JSON.</param>
            <param name="objeto">El objeto a guardar en formato JSON.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.PersistorDeJson.Leer``1(System.String)">
            <summary>
            Lee la información contenida en el archivo JSON ubicado en la ruta enviada por parámetros.
            </summary>
            <param name="ruta">La ruta hacia la fuente de información.</param>
            <returns>Retorna la información encontrada en forma de una cadena de caracteres.</returns>
        </member>
        <member name="T:PII_E13.ClassLibrary.Producto">
            <summary>
            /// Clase que representa un Producto dentro del dominio del problema.
            Un Producto representa una instancia de venta de un Material, conteniendo su cantidad en su unidad específica,
            un valor en UYU y otro en dólares asignados por su vendedor y la ubicación donde se almacena.
            Se aplica el patrón de SRP y se obtiene una alta cohesión dentro de la clase Producto,
            al asignarle únicamente las responsabilidades de contener información sobre un producto y redactarla adecuadamente,
            enfocando sus propiedades y métodos para estos objetivos.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Producto.#ctor(PII_E13.ClassLibrary.Material,PII_E13.ClassLibrary.UbicacionBase,System.Double,System.Double,System.Double)">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Producto"/> a través de la deserialización de un objeto en formato JSON.
            </summary>
            <param name="material">Material que compone al producto.</param>
            <param name="ubicacion">Ubicación donde está almacenado el producto</param>
            <param name="cantidadEnUnidad">Cantidad del producto en la unidad estándar de su material.</param>
            <param name="valorUYU">Valor en pesos uruguayos del producto.</param>
            <param name="valorUSD">Valor en dolares del producto.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.Producto.#ctor(PII_E13.ClassLibrary.Material,System.String,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Producto"/>.
            </summary>
            <param name="material">Material que compone al producto.</param>
            <param name="ciudad">Ciudad en la que está localizado el producto.</param>
            <param name="direccion">Direccion en la que está localizado el producto.</param>
            <param name="cantidadEnUnidad">Cantidad del producto en la unidad estándar de su material.</param>
            <param name="valorUYU">Valor en pesos uruguayos del producto.</param>
            <param name="valorUSD">Valor en dolares del producto.</param>
        </member>
        <member name="P:PII_E13.ClassLibrary.Producto.Material">
            <summary>
            Instancia de material correspondiente al material ofrecido dentro de un producto,
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Producto.Ubicacion">
            <summary>
            Instancia de ubicacion correspondiente a la ubicacion donde se almacena el producto.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Producto.CantidadEnUnidad">
            <summary>
            Cantidad del material en su unidad especifica.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Producto.ValorUYU">
            <summary>
            Valor en pesos uruguayos del producto.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Producto.ValorUSD">
            <summary>
            Valor en dólares estadounidenses del producto.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Producto.Redaccion">
            <summary>
            Redaccion del producto formateada.
            </summary>
        </member>
        <member name="T:PII_E13.ClassLibrary.Respuesta">
            <summary>
            Clase que representa una respuesta a un mensaje.
            DOCUMENTAR PATRONES APLICADOS
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Respuesta.#ctor(PII_E13.ClassLibrary.IMensaje)">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Respuesta"/> con un mensaje previo asignado.
            El resto de propiedades son inicializadas en valores predeterminados.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Respuesta.#ctor(PII_E13.ClassLibrary.IMensaje,System.String,System.Boolean)">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Respuesta"/> con un texto asignado y la indicación explícita
            sobre si se debe editar el último mensaje.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Respuesta.#ctor(System.String)">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Respuesta"/> con un texto asignado.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Respuesta.Texto">
            <summary>
            Texto del mensaje de la <see cref="T:PII_E13.ClassLibrary.Respuesta"/>.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Respuesta.MensajePrevio">
            <summary>
            Mensaje que provocó esta respuesta.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Respuesta.EditarMensaje">
            <summary>
            Indica si el último mensaje debe ser editado, de ser posible.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Respuesta.Botones">
            <summary>
            Matriz de botones enviados junto al mensaje
            </summary>
        </member>
        <member name="T:PII_E13.ClassLibrary.Rubro">
            <summary>
            Esta clase respresenta los datos basicos y necesarios de los rubros.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Rubro.Nombre">
            <summary>
            Se indica el nombre <value>rubro</value> del rubro
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Rubro.#ctor(System.String)">
            <summary>
            Se indica el nombre <value>rubro</value> del rubro
            </summary>
            <param name="nombre">rubro</param>        
        </member>
        <member name="T:PII_E13.ClassLibrary.Sesion">
            <summary>
            Representa a una sesion de un usuario en el bot.
            Cumple SRP y Expert ya que se encarga de determinar la información necesaria para diferenciar una sesión y los datos de la misma.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Sesion.#ctor(System.String)">
            <summary>
            Crea una instancia de Sesion
            </summary>
            <param name="idUsuario">Identificador único de un usuario.</param>
        </member>
        <member name="P:PII_E13.ClassLibrary.Sesion.IdSesion">
            <summary>
            Identificador único de la sesión.
            </summary>
            <value>Una cadena de caracteres con el identificador único de una sesión de un usuario.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Sesion.IdUsuario">
            <summary>
            Identificador único del usuario de esta sesión.
            </summary>
            <value>Una cadena de caracteres con el identificador único de un usuario de una sesión.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Sesion.FechaCreacion">
            <summary>
            Fecha de creación de la sesión.
            </summary>
            <value><see cref="T:System.DateTime"/> conteniendo el valor temporal del momento en que fue creada la sesión.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Sesion.UltimaActividad">
            <summary>
            Fecha de expiración de la sesión.
            </summary>
            <value><see cref="T:System.DateTime"/> conteniendo el valor temporal del momento en que la sesión expirará.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Sesion.Activa">
            <summary>
            Indica si la sesión sigue activa. Una sesión es considerad activa si su última actividad ocurrió hace menos de 30 minutos.
            </summary>
            <value>true si la sesión está activa y false en caso contrario.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Sesion.PLN">
            <summary>
            Instancia de <see cref="T:PII_E13.ClassLibrary.LenguajeNatural"/> utilizada para procesar con procesamiento de lenguaje natural (PLN) los mensajes de los usuarios.
            </summary>
            <value>Una instancia de <see cref="T:PII_E13.ClassLibrary.LenguajeNatural"/> para una sesión.</value>
        </member>
        <member name="T:PII_E13.ClassLibrary.Sistema">
            <summary>
            Esta clase representa al sistema principal de la aplicación. Permite registrar usuarios como Empresas
            o Emprendedores y actúa como un contenedor de los mismos.
            Se aplica el patrón Singleton dentro de esta clase para permitir solo la creación y utilización
            de una instancia de Sistema. Además, utilizamos el principio Creator para definir a Sistema como una
            clase creadora de empresas y emprendedores, ya que está compuesta por ellos. Esto le permite a Sistema
            actuar como el contenedor de información principal de la aplicación.
            Enfocando de esta forma a la clase de Sistema, buscamos también aumentar la cohesión de la misma y 
            lograr el patrón de SRP.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Sistema.#ctor">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Sistema"/>.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Sistema.RegistrarEmpresa(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Registra una nueva <see cref="T:PII_E13.ClassLibrary.Empresa"/> en el sistema.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Sistema.RegistrarEmprendedor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{PII_E13.ClassLibrary.Habilitacion})">
            <summary>
            Registra un nuevo <see cref="T:PII_E13.ClassLibrary.Emprendedor"/> en el sistema.
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Sistema.ObtenerEmpresaPorId(System.String)">
            <summary>
            Recupera una instancia de <see cref="T:PII_E13.ClassLibrary.Empresa"/> de la lista de empresas utilizando su id y una id dada.
            </summary>
            <param name="id">Id de la empresa a recuperar.</param>
            <returns>La instancia de <see cref="T:PII_E13.ClassLibrary.Empresa"/> correspondiente a la id dada.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Si no encuentra una <see cref="T:PII_E13.ClassLibrary.Empresa"/></exception>
        </member>
        <member name="M:PII_E13.ClassLibrary.Sistema.ObtenerEmprendedorPorId(System.String)">
            <summary>
            Recupera una instancia de <see cref="T:PII_E13.ClassLibrary.Emprendedor"/> de la lista de emprendedores utilizando su id y una id dada.
            </summary>
            <param name="id">Id del emprendedor a recuperar.</param>
            <returns>La instancia de <see cref="T:PII_E13.ClassLibrary.Emprendedor"/> correspondiente a la id dada.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Si no encuentra un <see cref="T:PII_E13.ClassLibrary.Emprendedor"/></exception>
        </member>
        <member name="M:PII_E13.ClassLibrary.Sistema.ObtenerMaterialPorNombre(System.String)">
            <summary>
            Recupera una instancia de <see cref="T:PII_E13.ClassLibrary.Material"/> de la lista de materiales utilizando su nombre y un nombre dado.
            </summary>
            <param name="nombre">El nombre del material a recuperar.</param>
            <returns>La instancia de <see cref="T:PII_E13.ClassLibrary.Material"/> correspondiente al nombre dado.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Si no encuentra un <see cref="T:PII_E13.ClassLibrary.Material"/></exception>
        </member>
        <member name="M:PII_E13.ClassLibrary.Sistema.ObtenerOfertaPorId(System.String)">
            <summary>
            Recupera una instancia de <see cref="T:PII_E13.ClassLibrary.Oferta"/> de la lista de de emprendedores y sus respectivas listas de ofertas.
            </summary>
            <param name="id">Id de la <see cref="T:PII_E13.ClassLibrary.Oferta"/> a recuperar.</param>
            <returns>La instancia de <see cref="T:PII_E13.ClassLibrary.Oferta"/> correspondiente a su id dada.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Si no encuentra una <see cref="T:PII_E13.ClassLibrary.Oferta"/></exception>
        </member>
        <member name="P:PII_E13.ClassLibrary.Sistema.Empresas">
            <summary>
            Lista de empresas registradas en el sistema.
            </summary>
            <value>Colección de instancias de <see cref="T:PII_E13.ClassLibrary.Empresa"/></value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Sistema.Emprendedores">
            <summary>
            Lista de emprendedores registrados en el sistema.
            </summary>
            <value>Colección de instancias de <see cref="T:PII_E13.ClassLibrary.Emprendedor"/></value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Sistema.Materiales">
            <summary>
            Lista de materiales registrados en el sistema.
            </summary>
            <value>Colección de instancias de <see cref="T:PII_E13.ClassLibrary.Material"/></value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Sistema.Instancia">
            <summary>
            Instancia del sistema durante la ejecución. Se aplica el patrón Singleton.
            </summary>
            <value>Una única instancia de <see cref="T:PII_E13.ClassLibrary.Sistema"/></value>
        </member>
        <member name="T:PII_E13.ClassLibrary.TelegramBot">
            <summary>
            Clase que representa un bot de Telegram.
            Se aplica el patrón de Adapter para definir una clase que funcione como adaptador entre nuestra solución y la API de Telegram.
            Se aplica DIP para asignar la responsabilidad de enviar mensajes a una abstraccion de tipo IEnviador e implementarla para Telegram en esta clase.
            También se aplica el patrón de diseño Singleton para que sólo exista una instancia de la clase.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.TelegramBot.Cliente">
            <summary>
            Cliente de la API de Telegram.
            </summary>
            <value>Un cliente de la API de Telegram que extiende a la interfaz <see cref="T:Telegram.Bot.ITelegramBotClient"/>.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.TelegramBot.IdBot">
            <summary>
            Identificador único del bot en Telegram.
            </summary>
            <value>Número entero correspondiente al identificador único en Telegram del bot.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.TelegramBot.NombreBot">
            <summary>
            Nombre del bot en Telegram.
            </summary>
            <value>Cadena de caracteres correspondiente al nombre en Telegram del bot.</value>
        </member>
        <member name="M:PII_E13.ClassLibrary.TelegramBot.EnviarMensaje(PII_E13.ClassLibrary.IRespuesta)">
            <summary>
            Envia un mensaje a la plataforma específica de este enviador.
            </summary>
            <param name="respuesta">Respuesta a enviar a la plataforma específica.</param>
        </member>
        <member name="F:PII_E13.ClassLibrary.TelegramBot.BotonListo">
            <summary>
            Instancia de <see cref="T:PII_E13.ClassLibrary.Boton"/> predefinida para representar a un botón con texto y callback "Listo".
            </summary>
            <value>Instancia de <see cref="T:PII_E13.ClassLibrary.Boton"/> con texto y callback "Listo".</value>
        </member>
        <member name="F:PII_E13.ClassLibrary.TelegramBot.BotonCancelar">
            <summary>
            Instancia de <see cref="T:PII_E13.ClassLibrary.Boton"/> predefinida para representar a un botón con texto y callback "Cancelar".
            </summary>
            <value>Instancia de <see cref="T:PII_E13.ClassLibrary.Boton"/> con texto y callback "Cancelar".</value>
        </member>
        <member name="F:PII_E13.ClassLibrary.TelegramBot.BotonSiguiente">
            <summary>
            Instancia de <see cref="T:PII_E13.ClassLibrary.Boton"/> predefinida para representar a un botón con texto y callback "Siguiente".
            </summary>
            <value>Instancia de <see cref="T:PII_E13.ClassLibrary.Boton"/> con texto y callback "Siguiente".</value>
        </member>
        <member name="F:PII_E13.ClassLibrary.TelegramBot.BotonAnterior">
            <summary>
            Instancia de <see cref="T:PII_E13.ClassLibrary.Boton"/> predefinida para representar a un botón con texto y callback "Anterior".
            </summary>
            <value>Instancia de <see cref="T:PII_E13.ClassLibrary.Boton"/> con texto y callback "Anterior".</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.TelegramBot.Instancia">
            <summary>
            Obtiene una instancia de la clase <see cref="T:PII_E13.ClassLibrary.TelegramBot"/>.
            </summary>
            <value>Instancia de la clase <see cref="T:PII_E13.ClassLibrary.TelegramBot"/>.</value>
        </member>
        <member name="T:PII_E13.ClassLibrary.UbicacionBase">
            <summary>
            Representa a la implementación básica del tipo <see cref="T:PII_E13.ClassLibrary.IUbicacion"/>, incluyendo implementaciones para todas sus operaciones.
            Aplica Expert ya que se le da la responsabilidad de gestionar las coordenas de una ubicacion, debido a que es la clase más experta de la información.
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.UbicacionBase.Ciudad">
            <summary>
            Nombre de la ciudad de la ubicación
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.UbicacionBase.Direccion">
            <summary>
            Dirección correspondiente a la ubicación
            </summary>
            <value></value>
        </member>
        <member name="M:PII_E13.ClassLibrary.UbicacionBase.#ctor(System.String,System.String)">
            <summary>
            Crea una instancia de la clase Ubicacion
            </summary>
            <param name="ciudad">Ciudad</param>
            <param name="direccion">Dirección</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.UbicacionBase.Redactar">
            <summary>
            Genera una cadena de texto con la información de la ubicación
            </summary>
            <returns>Retorna un string con la ubicación formateada</returns>
        </member>
        <member name="M:PII_E13.ClassLibrary.UbicacionBase.ObtenerDistancia(PII_E13.ClassLibrary.IUbicacion)">
            <summary>
            Calcula la distancia entre dos instancias de implementaciones de <see cref="T:PII_E13.ClassLibrary.IUbicacion"/>
            Delega la responsabilidad de calcular la distancia al gestor.
            </summary>
            <param name="otraUbicacion">Otra ubicación, cuya distancia hacia esta instancia se quiere obtener.</param>
            <returns>Un double conteniendo la distancia entre las ubicaciones</returns>
        </member>
        <member name="T:PII_E13.ClassLibrary.Usuario">
            <summary>
            Representa a las abstracciones de un usuario en el sistema
            </summary>
        </member>
        <member name="M:PII_E13.ClassLibrary.Usuario.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Crea una instancia de <see cref="T:PII_E13.ClassLibrary.Usuario"/>
            </summary>
            <param name="id">Id del emprendedor en Telegram.</param>
            <param name="nombre">Nombre de la empresa del emprendedor.</param>
            <param name="ciudad">La ciudad donde se basa el emprendedor.</param>
            <param name="direccion">La direccion de la base de operaciones del emprendedor en la ciudad.</param>
            <param name="rubro">El rubro dentro del cual trabaja el emprendedor.</param>
        </member>
        <member name="M:PII_E13.ClassLibrary.Usuario.#ctor">
            <summary>
            Crea una instancia vacía de <see cref="T:PII_E13.ClassLibrary.Usuario"/>
            </summary>
        </member>
        <member name="P:PII_E13.ClassLibrary.Usuario.Id">
            <summary>
            Identificador único de un <see cref="T:PII_E13.ClassLibrary.Usuario"/> en el sistema.
            </summary>
            <value>Una cadena de caracteres conteniendo al identificador del <see cref="T:PII_E13.ClassLibrary.Usuario"/> en el sistema.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Usuario.Nombre">
            <summary>
            Nombre de registro del <see cref="T:PII_E13.ClassLibrary.Usuario"/>.
            </summary>
            <value>Una cadena de caracteres conteniendo el nombre de registro del <see cref="T:PII_E13.ClassLibrary.Usuario"/>.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Usuario.Ubicacion">
            <summary>
            Ubicación de registro de un <see cref="T:PII_E13.ClassLibrary.Usuario"/>.
            </summary>
            <value>Una instancia de una implementación de <see cref="T:PII_E13.ClassLibrary.IUbicacion"/> correspondiente a la ubicación de registro del <see cref="T:PII_E13.ClassLibrary.Usuario"/>.</value>
        </member>
        <member name="P:PII_E13.ClassLibrary.Usuario.Rubro">
            <summary>
            Rubro al que pertence el <see cref="T:PII_E13.ClassLibrary.Usuario"/>, indicado por éste durante su registro.
            </summary>
            <value>Una instancia de <see cref="P:PII_E13.ClassLibrary.Usuario.Rubro"/> correspondiente al rubro de registro del <see cref="T:PII_E13.ClassLibrary.Usuario"/>.</value>
        </member>
        <member name="T:PII_E13.IIdentificable">
            <summary>
            Interfaz que representa a cualquier tipo identificable a través de una cadena de caracteres única.
            </summary>
        </member>
        <member name="P:PII_E13.IIdentificable.Id">
            <summary>
            Identificador único del objeto.
            </summary>
            <value>Cadena de caracteres conteniendo al identificador único del objeto.</value>
        </member>
        <member name="T:PII_E13.HandlerLibrary.BienvenidaHandler">
            <summary>
            Handler encargado de la primera interacción con el usuario del sistema.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.BienvenidaHandler.Busquedas">
            <summary>
            Diccionario utilizado para contener todas las búsquedas que se están realizando por los usuarios.
            Se identifica al usuario por su id en una plataforma y se guarda una instancia de <see cref="T:PII_E13.HandlerLibrary.BienvenidaHandler.InformacionPostulacion"/>.
            </summary>
            <value>Diccionario de instancias de <see cref="T:PII_E13.HandlerLibrary.BienvenidaHandler.InformacionPostulacion"/> identificadas por ids de usuarios en string</value>
        </member>
        <member name="M:PII_E13.HandlerLibrary.BienvenidaHandler.#ctor(PII_E13.HandlerLibrary.HandlerBase,System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler"/>. 
            </summary>
        </member>
        <member name="M:PII_E13.HandlerLibrary.BienvenidaHandler.ResolverInterno(PII_E13.ClassLibrary.Sesion,PII_E13.ClassLibrary.IMensaje,PII_E13.ClassLibrary.IRespuesta@)">
            <summary>
            La clase procesa el mensaje y retorna true o no lo procesa y retorna false.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <param name="mensaje">El mensaje a procesar.</param>
            <param name="respuesta">La respuesta al mensaje procesado.</param>
            <returns>true si el mensaje fue procesado; false en caso contrario</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.BienvenidaHandler.CancelarInterno(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Retorna este "handler" al estado inicial.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <member name="M:PII_E13.HandlerLibrary.BienvenidaHandler.PuedeResolver(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Determina si este "handler" puede procesar el mensaje.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <returns>true si el mensaje puede ser pocesado; false en caso contrario.</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.BienvenidaHandler.Cancelar(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Retorna este "handler" al estado inicial.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <member name="T:PII_E13.HandlerLibrary.BienvenidaHandler.Estados">
            <summary>
            Representación de los posibles estados de una postulación a oferta.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.BienvenidaHandler.TipoMensaje">
            <summary>
            Representación de los posibles tipos de mensajes.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.BienvenidaHandler.InformacionPostulacion">
            <summary>
            Clase privada contenedora de la información de una postulación a una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.BienvenidaHandler.InformacionPostulacion.Etiquetas">
            <summary>
            Lista de etiquetas que está usando un usuario para buscar una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.BienvenidaHandler.InformacionPostulacion.OfertasEncontradas">
            <summary>
            Lista de ofertas encontradas en la búsqueda de ofertas.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.BienvenidaHandler.InformacionPostulacion.Categorias">
            <summary>
            Lista de categorías que está usando un usuario para buscar una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.BienvenidaHandler.InformacionPostulacion.Estado">
            <summary>
            Estado de la búsqueda de ofertas de un usuario.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.BienvenidaHandler.InformacionPostulacion.ofertaSeleccionada">
            <summary>
            Oferta seleccionada por un usuario entre la lista de ofertas encontradas.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.BienvenidaHandler.InformacionPostulacion.IndiceActual">
            <summary>
            Indice actual dentro de la lista de categorías.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.CrearOfertaHandler">
            <summary>
            Clase base para implementar el patrón Chain of Responsibility. En ese patrón se pasa un mensaje a través de una
            cadena de "handlers" que pueden procesar o no el mensaje. Cada "handler" decide si procesa el mensaje, o si se lo
            pasa al siguiente. Esta clase base implmementa la responsabilidad de recibir el mensaje y pasarlo al siguiente
            "handler" en caso que el mensaje no sea procesado. La responsabilidad de decidir si el mensaje se procesa o no, y
            de procesarlo, se delega a las clases sucesoras de esta clase base.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.CrearOfertaHandler.Busquedas">
            <summary>
            Diccionario utilizado para contener todas las búsquedas que se están realizando por los usuarios.
            Se identifica al usuario por su id en una plataforma y se guarda una instancia de <see cref="T:PII_E13.HandlerLibrary.CrearOfertaHandler.InformacionPostulacion"/>.
            </summary>
            <value>Diccionario de instancias de <see cref="T:PII_E13.HandlerLibrary.CrearOfertaHandler.InformacionPostulacion"/> identificadas por ids de usuarios en string</value>
        </member>
        <member name="M:PII_E13.HandlerLibrary.CrearOfertaHandler.#ctor(PII_E13.HandlerLibrary.HandlerBase,System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:PII_E13.HandlerLibrary.PostularseAOfertaHandler"/>. 
            Esta clase procesa la postulación a una oferta.
            </summary>
        </member>
        <member name="M:PII_E13.HandlerLibrary.CrearOfertaHandler.ResolverInterno(PII_E13.ClassLibrary.Sesion,PII_E13.ClassLibrary.IMensaje,PII_E13.ClassLibrary.IRespuesta@)">
            <summary>
            La clase procesa el mensaje y retorna true o no lo procesa y retorna false.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <param name="mensaje">El mensaje a procesar.</param>
            <param name="respuesta">La respuesta al mensaje procesado.</param>
            <returns>true si el mensaje fue procesado; false en caso contrario</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.CrearOfertaHandler.PuedeResolver(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Determina si este "handler" puede procesar el mensaje.
            </summary>
            <param name="sesion">La sesion a procesar.</param>
            <returns>true si el mensaje puede ser pocesado; false en caso contrario.</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.CrearOfertaHandler.Cancelar(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Determina si este "handler" puede procesar el mensaje. En la clase base se utiliza el array
            <see cref="!:HandlerBase.Etiquetas"/> para buscar el texto en el mensaje ignorando mayúsculas y minúsculas. Las
            clases sucesores pueden sobreescribir este método para proveer otro mecanismo para determina si procesan o no
            un mensaje.
            </summary>
            <param name="callback">El callback a procesar.</param>
            <returns>true si el mensaje puede ser pocesado; false en caso contrario.</returns>
            <summary>
            Retorna este "handler" al estado inicial. En los "handler" sin estado no hace nada. Los "handlers" que
            procesan varios mensajes cambiando de estado entre mensajes deben sobreescribir este método para volver al
            estado inicial.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.CrearOfertaHandler.Estados">
            <summary>
            Representación de los posibles estados de una postulación a oferta.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.CrearOfertaHandler.TipoMensaje">
            <summary>
            Representación de los posibles tipos de mensajes.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.CrearOfertaHandler.InformacionPostulacion">
            <summary>
            Clase privada contenedora de la información de una postulación a una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.CrearOfertaHandler.InformacionPostulacion.Etiquetas">
            <summary>
            Lista de etiquetas que está usando un usuario para buscar una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.CrearOfertaHandler.InformacionPostulacion.OfertasEncontradas">
            <summary>
            Lista de ofertas encontradas en la búsqueda de ofertas.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.CrearOfertaHandler.InformacionPostulacion.Categorias">
            <summary>
            Lista de categorías que está usando un usuario para buscar una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.CrearOfertaHandler.InformacionPostulacion.Estado">
            <summary>
            Estado de la búsqueda de ofertas de un usuario.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.CrearOfertaHandler.InformacionPostulacion.ofertaSeleccionada">
            <summary>
            Oferta seleccionada por un usuario entre la lista de ofertas encontradas.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.CrearOfertaHandler.InformacionPostulacion.IndiceActual">
            <summary>
            Indice actual dentro de la lista de categorías.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.HandlerBase">
            <summary>
            Clase base para implementar el patrón Chain of Responsibility. En ese patrón se pasa un mensaje a través de una
            cadena de "handlers" que pueden procesar o no el mensaje. Cada "handler" decide si procesa el mensaje, o si se lo
            pasa al siguiente. Esta clase base implmementa la responsabilidad de recibir el mensaje y pasarlo al siguiente
            "handler" en caso que el mensaje no sea procesado. La responsabilidad de decidir si el mensaje se procesa o no, y
            de procesarlo, se delega a las clases sucesoras de esta clase base.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.HandlerBase.Siguiente">
            <summary>
            Obtiene el próximo "handler".
            </summary>
            <value>El "handler" que será invocado si este "handler" no procesa el mensaje.</value>
        </member>
        <member name="P:PII_E13.HandlerLibrary.HandlerBase.Intencion">
            <summary>
            Obtiene o asigna el conjunto de palabras clave que este "handler" puede procesar.
            </summary>
            <value>Un array de palabras clave.</value>
        </member>
        <member name="M:PII_E13.HandlerLibrary.HandlerBase.#ctor(PII_E13.HandlerLibrary.IHandler)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:PII_E13.HandlerLibrary.HandlerBase"/>.
            </summary>
            <param name="siguiente">El próximo "handler".</param>
        </member>
        <member name="M:PII_E13.HandlerLibrary.HandlerBase.#ctor(PII_E13.HandlerLibrary.IHandler,System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:PII_E13.HandlerLibrary.HandlerBase"/> con una lista de comandos.
            </summary>
            <param name="intencion">La intención utilizada para identificar a este handler.</param>
            <param name="siguiente">El próximo "handler".</param>
        </member>
        <member name="M:PII_E13.HandlerLibrary.HandlerBase.ResolverInterno(PII_E13.ClassLibrary.Sesion,PII_E13.ClassLibrary.IMensaje,PII_E13.ClassLibrary.IRespuesta@)">
            <summary>
            Este método debe ser sobreescrito por las clases sucesores. La clase sucesora procesa el mensaje y retorna
            true o no lo procesa y retorna false.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <param name="mensaje">El mensaje a procesar.</param>
            <param name="respuesta">La respuesta al mensaje procesado.</param>
            <returns>true si el mensaje fue procesado; false en caso contrario</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.HandlerBase.CancelarInterno(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Este método puede ser sobreescrito en las clases sucesores que procesan varios mensajes cambiando de estado
            entre mensajes deben sobreescribir este método para volver al estado inicial. En la clase base no hace nada.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <member name="M:PII_E13.HandlerLibrary.HandlerBase.PuedeResolver(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Determina si este "handler" puede procesar el mensaje. En la clase base se utiliza procesado de lenguaje natural
            para comprobar que la intención identificada corresponda a la del "handler". Las clases sucesores pueden
            sobreescribir este método para proveer otro mecanismo para determina si procesan o no un mensaje.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <returns>true si el mensaje puede ser pocesado; false en caso contrario.</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.HandlerBase.Resolver(PII_E13.ClassLibrary.Sesion,PII_E13.ClassLibrary.IMensaje,PII_E13.ClassLibrary.IRespuesta@)">
            <summary>
            Procesa el mensaje o la pasa al siguiente "handler" si existe.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <param name="mensaje">El mensaje a procesar.</param>
            <param name="respuesta">La respuesta al mensaje procesado.</param>
            <returns>El "handler" que procesó el mensaje si el mensaje fue procesado; null en caso contrario.</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.HandlerBase.Cancelar(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Retorna este "handler" al estado inicial. En los "handler" sin estado no hace nada. Los "handlers" que
            procesan varios mensajes cambiando de estado entre mensajes deben sobreescribir este método para volver al
            estado inicial.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:PII_E13.HandlerLibrary.IHandler" -->
        <member name="P:PII_E13.HandlerLibrary.IHandler.Siguiente">
            <summary>
            Obtiene el próximo "handler".
            </summary>
            <value>El "handler" que será invocado si este "handler" no procesa el mensaje.</value>
        </member>
        <member name="M:PII_E13.HandlerLibrary.IHandler.Resolver(PII_E13.ClassLibrary.Sesion,PII_E13.ClassLibrary.IMensaje,PII_E13.ClassLibrary.IRespuesta@)">
            <summary>
            Procesa el mensaje o la pasa al siguiente "handler" si existe.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <param name="mensaje">El mensaje a procesar.</param>
            <param name="respuesta">La respuesta al mensaje procesado.</param>
            <returns>El "handler" que procesó el mensaje si el mensaje fue procesado; null en caso contrario.</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.IHandler.Cancelar(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Retorna este "handler" al estado inicial y cancela el próximo "handler" si existe. Es utilizado para que los
            "handlers" que procesan varios mensajes cambiando de estado entre mensajes puedan volver al estado inicial en
            caso de error por ejemplo.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <member name="T:PII_E13.HandlerLibrary.PostularseAOfertaHandler">
            <summary>
            Handler encargado de procesar la postulación de ofertas, desde el proceso de búsqueda hasta la selección final.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.PostularseAOfertaHandler.Busquedas">
            <summary>
            Diccionario utilizado para contener todas las búsquedas que se están realizando por los usuarios.
            Se identifica al usuario por su id en una plataforma y se guarda una instancia de <see cref="T:PII_E13.HandlerLibrary.PostularseAOfertaHandler.InformacionPostulacion"/>.
            </summary>
            <value>Diccionario de instancias de <see cref="T:PII_E13.HandlerLibrary.PostularseAOfertaHandler.InformacionPostulacion"/> identificadas por ids de usuarios en string</value>
        </member>
        <member name="M:PII_E13.HandlerLibrary.PostularseAOfertaHandler.#ctor(PII_E13.HandlerLibrary.HandlerBase)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:PII_E13.HandlerLibrary.PostularseAOfertaHandler"/>. 
            Esta clase procesa la postulación a una oferta.
            </summary>
            <param name="siguiente">El próximo "handler".</param>
        </member>
        <member name="M:PII_E13.HandlerLibrary.PostularseAOfertaHandler.#ctor(PII_E13.HandlerLibrary.HandlerBase,System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:PII_E13.HandlerLibrary.PostularseAOfertaHandler"/>. 
            </summary>
            <param name="siguiente">El próximo "handler".</param>
            <param name="intencion">La intención utilizada para identificar a este handler.</param>
        </member>
        <member name="M:PII_E13.HandlerLibrary.PostularseAOfertaHandler.ResolverInterno(PII_E13.ClassLibrary.Sesion,PII_E13.ClassLibrary.IMensaje,PII_E13.ClassLibrary.IRespuesta@)">
            <summary>
            La clase procesa el mensaje y retorna true o no lo procesa y retorna false.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <param name="mensaje">El mensaje a procesar.</param>
            <param name="respuesta">La respuesta al mensaje procesado.</param>
            <returns>true si el mensaje fue procesado; false en caso contrario</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.PostularseAOfertaHandler.Cancelar(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Retorna este "handler" al estado inicial.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <member name="M:PII_E13.HandlerLibrary.PostularseAOfertaHandler.CancelarInterno(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Retorna este "handler" al estado inicial.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <member name="M:PII_E13.HandlerLibrary.PostularseAOfertaHandler.PuedeResolver(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Determina si este "handler" puede procesar el mensaje. En la clase base se utiliza procesado de lenguaje natural
            para comprobar que la intención identificada corresponda a la del "handler". Las clases sucesores pueden
            sobreescribir este método para proveer otro mecanismo para determina si procesan o no un mensaje.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <returns>true si el mensaje puede ser pocesado; false en caso contrario.</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.PostularseAOfertaHandler.ObtenerMatrizDeBotones(System.Collections.Generic.List{PII_E13.ClassLibrary.IBoton},System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Collections.Generic.List{PII_E13.ClassLibrary.IBoton}})">
            <summary>
            Método privado para construir una matriz de botones recibiendo una lista, el indice inicial de botones, la cantidad de filas y columnas
            de botones en la matriz y una lista de botones fijos, incluidos al final de la misma.
            </summary>
            <param name="botones">Lista de instancias de implementaciones de <see cref="T:PII_E13.ClassLibrary.IBoton"/>.</param>
            <param name="indiceInicial">Entero correspondiente al índice de la lista a partir del cual se desean utilizar elementos.</param>
            <param name="filas">Entero correspondiente a la cantidad de filas de botones de la matriz.</param>
            <param name="columnas">Entero correspondiente a la cantidad de columnas de botones de la matriz.</param>
            <param name="botonesFijos">Lista de instancias de implementaciones de <see cref="T:PII_E13.ClassLibrary.IBoton"/> a incluir al final de la lista.</param>
            <returns></returns>
        </member>
        <member name="T:PII_E13.HandlerLibrary.PostularseAOfertaHandler.Estados">
            <summary>
            Representación de los posibles estados de una postulación a oferta.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.PostularseAOfertaHandler.InformacionPostulacion">
            <summary>
            Clase privada contenedora de la información de una postulación a una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.PostularseAOfertaHandler.InformacionPostulacion.Etiquetas">
            <summary>
            Lista de etiquetas que está usando un usuario para buscar una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.PostularseAOfertaHandler.InformacionPostulacion.OfertasEncontradas">
            <summary>
            Lista de ofertas encontradas en la búsqueda de ofertas.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.PostularseAOfertaHandler.InformacionPostulacion.Categorias">
            <summary>
            Lista de categorías que está usando un usuario para buscar una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.PostularseAOfertaHandler.InformacionPostulacion.CategoriasDisponibles">
            <summary>
            Lista de categorías disponibles para elegir.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.PostularseAOfertaHandler.InformacionPostulacion.Estado">
            <summary>
            Estado de la búsqueda de ofertas de un usuario.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.PostularseAOfertaHandler.InformacionPostulacion.ofertaSeleccionada">
            <summary>
            Oferta seleccionada por un usuario entre la lista de ofertas encontradas.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.PostularseAOfertaHandler.InformacionPostulacion.IndiceActual">
            <summary>
            Indice actual dentro de cualquier lista paginada.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler">
            <summary>
            Handler encargado de procesar el registro de un emprendedor.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.Busquedas">
            <summary>
            Diccionario utilizado para contener todas las búsquedas que se están realizando por los usuarios.
            Se identifica al usuario por su id en una plataforma y se guarda una instancia de <see cref="T:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.InformacionPostulacion"/>.
            </summary>
            <value>Diccionario de instancias de <see cref="T:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.InformacionPostulacion"/> identificadas por ids de usuarios en string</value>
        </member>
        <member name="M:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.#ctor(PII_E13.HandlerLibrary.HandlerBase,System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler"/>. 
            </summary>
        </member>
        <member name="M:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.ResolverInterno(PII_E13.ClassLibrary.Sesion,PII_E13.ClassLibrary.IMensaje,PII_E13.ClassLibrary.IRespuesta@)">
            <summary>
            La clase procesa el mensaje y retorna true o no lo procesa y retorna false.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <param name="mensaje">El mensaje a procesar.</param>
            <param name="respuesta">La respuesta al mensaje procesado.</param>
            <returns>true si el mensaje fue procesado; false en caso contrario</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.CancelarInterno(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Retorna este "handler" al estado inicial.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <member name="M:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.PuedeResolver(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Determina si este "handler" puede procesar el mensaje.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <returns>true si el mensaje puede ser pocesado; false en caso contrario.</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.Cancelar(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Retorna este "handler" al estado inicial.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <member name="T:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.Estados">
            <summary>
            Representación de los posibles estados de una postulación a oferta.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.TipoMensaje">
            <summary>
            Representación de los posibles tipos de mensajes.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.InformacionPostulacion">
            <summary>
            Clase privada contenedora de la información de una postulación a una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.InformacionPostulacion.Etiquetas">
            <summary>
            Lista de etiquetas que está usando un usuario para buscar una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.InformacionPostulacion.OfertasEncontradas">
            <summary>
            Lista de ofertas encontradas en la búsqueda de ofertas.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.InformacionPostulacion.Categorias">
            <summary>
            Lista de categorías que está usando un usuario para buscar una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.InformacionPostulacion.Estado">
            <summary>
            Estado de la búsqueda de ofertas de un usuario.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.InformacionPostulacion.ofertaSeleccionada">
            <summary>
            Oferta seleccionada por un usuario entre la lista de ofertas encontradas.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmprendedorHandler.InformacionPostulacion.IndiceActual">
            <summary>
            Indice actual dentro de la lista de categorías.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.RegistrarEmpresaHandler">
            <summary>
            Handler encargado de procesar el registro de una empresa.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.Busquedas">
            <summary>
            Diccionario utilizado para contener todas las búsquedas que se están realizando por los usuarios.
            Se identifica al usuario por su id en una plataforma y se guarda una instancia de <see cref="T:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.InformacionPostulacion"/>.
            </summary>
            <value>Diccionario de instancias de <see cref="T:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.InformacionPostulacion"/> identificadas por ids de usuarios en string</value>
        </member>
        <member name="M:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.#ctor(PII_E13.HandlerLibrary.HandlerBase,System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:PII_E13.HandlerLibrary.RegistrarEmpresaHandler"/>. 
            </summary>
        </member>
        <member name="M:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.ResolverInterno(PII_E13.ClassLibrary.Sesion,PII_E13.ClassLibrary.IMensaje,PII_E13.ClassLibrary.IRespuesta@)">
            <summary>
            La clase procesa el mensaje y retorna true o no lo procesa y retorna false.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <param name="mensaje">El mensaje a procesar.</param>
            <param name="respuesta">La respuesta al mensaje procesado.</param>
            <returns>true si el mensaje fue procesado; false en caso contrario</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.CancelarInterno(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Retorna este "handler" al estado inicial.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <member name="M:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.PuedeResolver(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Determina si este "handler" puede procesar el mensaje.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <returns>true si el mensaje puede ser pocesado; false en caso contrario.</returns>
        </member>
        <member name="M:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.Cancelar(PII_E13.ClassLibrary.Sesion)">
            <summary>
            Retorna este "handler" al estado inicial.
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
        </member>
        <member name="T:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.Estados">
            <summary>
            Representación de los posibles estados de una postulación a oferta.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.TipoMensaje">
            <summary>
            Representación de los posibles tipos de mensajes.
            </summary>
        </member>
        <member name="T:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.InformacionPostulacion">
            <summary>
            Clase privada contenedora de la información de una postulación a una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.InformacionPostulacion.Etiquetas">
            <summary>
            Lista de etiquetas que está usando un usuario para buscar una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.InformacionPostulacion.Categorias">
            <summary>
            Lista de categorías que está usando un usuario para buscar una oferta.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.InformacionPostulacion.Estado">
            <summary>
            Estado de la búsqueda de ofertas de un usuario.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.InformacionPostulacion.ofertaSeleccionada">
            <summary>
            Oferta seleccionada por un usuario entre la lista de ofertas encontradas.
            </summary>
        </member>
        <member name="P:PII_E13.HandlerLibrary.RegistrarEmpresaHandler.InformacionPostulacion.IndiceActual">
            <summary>
            Indice actual dentro de la lista de categorías.
            </summary>
        </member>
        <member name="T:LibraryHandler.DespedidaHandler">
            <summary>
            Handler encargado de despedir a los usuarios al final de una conversación.
            </summary>
        </member>
        <member name="M:LibraryHandler.DespedidaHandler.#ctor(PII_E13.HandlerLibrary.HandlerBase,System.String)">
            <summary>
            Crea una instancia de <see cref="T:LibraryHandler.DespedidaHandler"/>.
            </summary>
            <param name="siguiente">El próximo "handler".</param>
            <param name="intencion">La intención utilizada para identificar a este handler.</param>
            <returns></returns>
        </member>
        <member name="M:LibraryHandler.DespedidaHandler.ResolverInterno(PII_E13.ClassLibrary.Sesion,PII_E13.ClassLibrary.IMensaje,PII_E13.ClassLibrary.IRespuesta@)">
            <summary>
            La clase procesa el mensaje y retorna true o no lo procesa y retorna false.        
            </summary>
            <param name="sesion">La sesión en la cual se envió el mensaje.</param>
            <param name="mensaje">El mensaje a procesar.</param>
            <param name="respuesta">La respuesta al mensaje procesado.</param>
            <returns></returns>
        </member>
        <member name="T:Ucu.Poo.Locations.Client.Distance">
            <summary>
            Representa la distancia entre las coordenas o las direcciones de origen y destino retornada en los métodos
            <see cref="M:Ucu.Poo.Locations.Client.LocationApiClient.GetDistanceAsync(Ucu.Poo.Locations.Client.Location,Ucu.Poo.Locations.Client.Location)"/> o
            <see cref="M:Ucu.Poo.Locations.Client.LocationApiClient.GetDistanceAsync(System.String,System.String)"/>.
            </summary>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Distance.Found">
            <summary>
            Indica si se encontraron o no las coordenas o las direcciones de origen y destino.
            </summary>
            <value>true si se encontró la dirección; false en caso contrario.</value>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Distance.TravelDistance">
            <summary>
            La distancia entre las coordenadas o las direcciones de origen y destino.
            </summary>
            <value>La distancia en metros.</value>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Distance.TravelDuration">
            <summary>
            El tiempo que se demora en llegar de las coordenadas o de las direcciones de origen a las de destino.
            </summary>
            <value>El tiempo que se demora en minutos.</value>
        </member>
        <member name="T:Ucu.Poo.Locations.Client.Location">
            <summary>
            Representa las coordenadas y otros datos de la ubicación de una dirección retornada en el método
            <see cref="M:Ucu.Poo.Locations.Client.LocationApiClient.GetLocationAsync(System.String,System.String,System.String,System.String)"/>.
            </summary>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Location.Found">
            <summary>
            Indica si se encontró o no la dirección. En ese caso son válidos los demás valores. En caso contrario los
            demás valores son indeterminados.
            </summary>
            <value>true si se encontró la dirección; false en caso contrario.</value>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Location.AddresLine">
            <summary>
            La dirección: calle y número, ruta y kilómetro, etc.
            </summary>
            <value>Por ejemplo, Avenida 8 de Octubre 2738.</value>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Location.CountryRegion">
            <summary>
            El país.
            </summary>
            <value>Por ejemplo, Uruguay</value>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Location.FormattedAddress">
            <summary>
            La dirección completa, incluyendo ciudad, código postal, etc.
            </summary>
            <value>Por ejemplo, Avenida 8 de Octubre 2738, Montevideo, 11200, Uruguay.</value>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Location.Locality">
            <summary>
            La localidad o ciudad.
            </summary>
            <value>Por ejemplo, Montevideo</value>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Location.PostalCode">
            <summary>
            El código postal.
            </summary>
            <value>Por ejemplo, 11200</value>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Location.Latitude">
            <summary>
            La latitud de la dirección.
            </summary>
            <value>El valor de la latitud en formato decimal.</value>
        </member>
        <member name="P:Ucu.Poo.Locations.Client.Location.Longitude">
            <summary>
            La longitud de la dirección.
            </summary>
            <value>El valor de la longitud en formato decimal.</value>
        </member>
        <member name="M:Ucu.Poo.Locations.Client.LocationApiClient.GetLocationAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Obtiene las coordenadas de una dirección.
            </summary>
            <param name="address">La dirección.</param>
            <param name="city">La ciudad. Es opcional. El valor predeterminado es Montevideo.</param>
            <param name="department">El departamento, estado, provincia, etc. Es opcional. El valor predeterminado es `ontevideo.</param>
            <param name="country">El país. Es opcional. El valor predeterminado es Uruguay.</param>
            <returns>Las coordenadas de la dirección.</returns>
        </member>
        <member name="M:Ucu.Poo.Locations.Client.LocationApiClient.GetDistanceAsync(Ucu.Poo.Locations.Client.Location,Ucu.Poo.Locations.Client.Location)">
            <summary>
            Obtiene la distancia entre dos coordenadas.
            </summary>
            <param name="from">La coordenada de origen.</param>
            <param name="to">La coordenada de destino.</param>
            <returns>La distancia entre las dos coordenadas.</returns>
        </member>
        <member name="M:Ucu.Poo.Locations.Client.LocationApiClient.GetDistanceAsync(System.String,System.String)">
            <summary>
            Obtiene la distancia entre dos direcciones.
            </summary>
            <param name="from">La dirección de origen.</param>
            <param name="to">La dirección de destino.</param>
            <returns>La distancia entre las dos direcciones.</returns>
        </member>
        <member name="M:Ucu.Poo.Locations.Client.LocationApiClient.DownloadMapAsync(System.Double,System.Double,System.String,System.Int32)">
            <summary>
            Descarga una mapa de una coordenada.
            </summary>
            <param name="latitude">La latitud de la coordenada.</param>
            <param name="longitude">La longitud de la coordenada.</param>
            <param name="path">La ruta del archivo donde guardar el mapa. El formato es PNG.</param>
            <param name="zoomLevel">El nivel de zoom del mapa entre 1 y 20. Es opcional. El valor predeterminado es
            15.</param>
        </member>
        <member name="M:Ucu.Poo.Locations.Client.LocationApiClient.DownloadRouteAsync(System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Un mapa con una ruta entre dos coordenadas.
            </summary>
            <param name="fromLatitude">La latitud de la coordenada de origen.</param>
            <param name="fromLongitude">La longitu de la coordenada de origen.</param>
            <param name="toLatitude">La latitud de la coordenada de destino.</param>
            <param name="toLongitude">La longitud de la coordenada de destino.</param>
            <param name="path">La ruta del archivo donde guardar el mapa. Es formato es PNG.</param>
        </member>
    </members>
</doc>
